name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y zip unzip openjdk-17-jdk python3-pip git
          pip install --upgrade pip
          pip install buildozer cython virtualenv

      - name: Install Android SDK tools manually
        run: |
          mkdir -p $HOME/android-sdk
          cd $HOME/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d cmdline-tools
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager "platforms;android-31" "build-tools;33.0.2" "platform-tools"

      - name: Set environment variables
        run: |
          echo "export ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=$HOME/android-sdk/platform-tools:$HOME/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

      - name: Build with Buildozer
        run: |
          if [ ! -f buildozer.spec ]; then buildozer init; fi
          buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: myapp-debug-apk
          path: bin/*.apk


